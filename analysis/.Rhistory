labels <- as.character(d$culture)
text(d$lon2, d$lat, labels = labels, cex = 0.7, pos = c(2,4,3,3,4,1,3,2,4,2))
# overlay lines
for(i in 1:10)
for(j in 1:10)
if(i < j)
lines(c(d$lon2[i],d$lon2[j]), c(d$lat[i], d$lat[j]),
lwd=2, col = col.alpha("black", Rho[i,j]^2))
psize <- d$logpop/max(d$logpop)
psize <- exp(psize*1.5)-2
# plot raw data and labels
plot(d$lon2, d$lat, xlab = "longitude", ylab = "latitude",
col = randi2, cex = psize, pch = 16, xlim = c(-50,30))
labels <- as.character(d$culture)
text(d$lon2, d$lat, labels = labels, cex = 0.7, pos = c(2,4,3,3,4,1,3,2,4,2))
# overlay lines
for(i in 1:10)
for(j in 1:10)
if(i < j)
lines(c(d$lon2[i],d$lon2[j]), c(d$lat[i], d$lat[j]),
lwd=2, col = col.alpha("black", Rho[i,j]^2))
plot(d$lon2, d$lat, xlab = "longitude", ylab = "latitude",
col = rangi2, cex = psize, pch = 16, xlim = c(-50,30))
labels <- as.character(d$culture)
text(d$lon2, d$lat, labels = labels, cex = 0.7, pos = c(2,4,3,3,4,1,3,2,4,2))
# overlay lines
for(i in 1:10)
for(j in 1:10)
if(i < j)
lines(c(d$lon2[i],d$lon2[j]), c(d$lat[i], d$lat[j]),
lwd=2, col = col.alpha("black", Rho[i,j]^2))
logpop.seq <- seq( from=6 , to=14 , length.out=30 )
lambda <- sapply( logpop.seq ,
function(lp) exp( post$a + post$bp*lp ) )
lambda.median <- apply( lambda , 2 , median )
lambda.PI80 <- apply( lambda , 2 , PI , prob=0.8 )
# plot raw data and labels
plot( d$logpop ,
d$total_tools ,
col=rangi2 ,
cex=psize ,
pch=16 ,
xlab="log population" ,
ylab="total tools" )
text( d$logpop ,
d$total_tools ,
labels=labels ,
cex=0.7 ,
pos=c(4,3,4,2,2,1,4,4,4,2) )
# display posterior predictions
lines( logpop.seq ,
lambda.median ,
lty=2 )
lines( logpop.seq ,
lambda.PI80[1,] ,
lty=2 )
lines( logpop.seq ,
lambda.PI80[2,] ,
lty=2 )
# overlay correlations
for( i in 1:10 )
for ( j in 1:10 )
if ( i < j )
lines( c( d$logpop[i],d$logpop[j] ) ,
c( d$total_tools[i],d$total_tools[j] ) ,
lwd=2 , col=col.alpha("black",Rho[i,j]^2) )
gas <- ((408 * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((59699 - 59117) * 0.1586) + (106 * 0.18)
59699 - 59117
gas <- ((408 * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((59699 - 59117) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
rm(list = ls())
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
total_owed = w_owes + k_owes + l_owes + j_owes
total_owed/4
options(digits = 2)
# work out bills
# for 8th March 2018
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
# total owed
total_owed = w_owes + k_owes + l_owes + j_owes
total_owed
options(digits = 4)
# work out bills
# for 8th March 2018
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
# total owed
total_owed = w_owes + k_owes + l_owes + j_owes
total_owed
total_owed/4
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 3
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
# total owed
total_owed = w_owes + k_owes + l_owes + j_owes
97*10^6 * 15
97*10^6 * 10
97*10^6
97*10^5
setwd("F:/Uni/Github/TargetAbsentStoppingRules/analysis")
library(brms)
library(rstan)
library(tidyverse)
load("scratch/models/brm_m11")
m11_effects <- marginal_effects(m11_rt_theta_bt_cht)
plot(m11_effects, plot = TRUE)
summary(m11_rt_theta_bt_cht)
summary(m11_rt_theta_bt_cht)
plot(m11_effects, plot = TRUE)
plot(m11_effects, plot = FALSE)[[5]]
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", colour = "Block Type")
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", fill = "Block Type")
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", fill = "Block Type", colour = "Block Type")
plot(m11_effects, plot = FALSE)[[4]] +
ggplot2::ggtitle("Model with interaction of Block type and Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Theta")
plot(m11_effects, plot = FALSE)[[4]] +
ggplot2::ggtitle("Model with interaction of Block type and Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Theta", fill = "Block Type", colour = "Block Type")
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", fill = "Block Type", colour = "Block Type")
busses <- 77.75 + 66.50
CB <- 55.45
hotel <- 269
K_owes <- (busses + CB + hotel)/2
total <- busses + CB + hotel
rm(busses, total, K_owes, hotel, CB)
summary(m11_rt_theta_bt_cht)
load("scratch/models/brm_m10")
summary(m10_rt_theta_bt_cht)
m10_effects <- marginal_effects(m10_rt_theta_bt_cht)
plot(m10_effects, plot = TRUE)
library(tidyverse)
library(rethinking)
load("scratch/processed_data.rda")
knitr::opts_chunk$set(fig.width=12, fig.height=6.5)
df$difficulty <- round(df$difficulty, digits = 1)
df$p_difficulty <- round(df$p_difficulty, digits = 1)
df$TATP <- 0
# Say when it's TA and when it's TP
df$TATP[df$key == "l"] <- "TP"
df$TATP[df$key == "r"] <- "TA"
toberemoved <- which(df$site == "Essex" & df$group == "SIBL")
df <- df[-toberemoved,]
rm(toberemoved)
total_observations <- length(df$rt)
# get average number of trials
temp <- group_by(df, participant,block_type,block,group)
number_of_trials <- summarise(temp, num_trials = length(rt))
rm(temp)
total_observations
trials_per_participant = mean(number_of_trials$num_trials)
trials_per_participant
df <- df[complete.cases(df),]
total_observations_nar <- length(df$rt)
temp <- group_by(df, participant,block_type,block,group)
number_of_trials <- summarise(temp, num_trials = length(rt))
rm(temp)
trials_per_participant_nar <- mean(number_of_trials$num_trials)
percent_remaining <- round((total_observations_nar/total_observations)*100)
total_observations_nar
trials_per_participant_nar
trials_per_block_plt = ggplot(number_of_trials, aes(num_trials))
trials_per_block_plt = trials_per_block_plt + geom_bar()
trials_per_block_plt = trials_per_block_plt + xlab("Number of trials")
trials_per_block_plt = trials_per_block_plt + ylab("No. participants")
temp <- group_by(df, participant,block_type,group)
number_of_trials_2 <- summarise(temp, num_trials = length(rt))
rm(temp)
trials_total_plt = ggplot(number_of_trials_2, aes(num_trials))
trials_total_plt = trials_total_plt + geom_bar()
trials_total_plt = trials_total_plt + xlab("Number of trials")
trials_total_plt = trials_total_plt + ylab("No. participants")
trials_per_block_plt
trials_total_plt
# so mean and median rt by group, block type, difficulty, and Ta vs Tp
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
rm(temp)
mean_rt_plot = ggplot(desc_stats, aes(difficulty, mean_rt, colour = block_type))
mean_rt_plot = mean_rt_plot + geom_point()
mean_rt_plot = mean_rt_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_rt_plot = mean_rt_plot + facet_grid(group~targ_pr)
median_rt_plot = ggplot(desc_stats, aes(difficulty, median_rt, colour = block_type))
median_rt_plot = median_rt_plot + geom_point()
median_rt_plot = median_rt_plot + geom_errorbar(aes(ymin = lower_median, ymax = upper_median))
median_rt_plot = median_rt_plot + facet_grid(group~targ_pr)
levels(desc_stats$group)
desc_stats$group[desc_stats$group == "RABL"] <- "Random and Blocked"
desc_stats$group[desc_stats$group == "SIBL"] <- "Sinewave and Blocked"
desc_stats$group[desc_stats$group == "RABL",] <- "Random and Blocked"
desc_stats$group[desc_stats$group == "RABL"] <- "Random/Blocked"
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
desc_stats$group[desc_stats$group == "RABL"] <- "Random/Blocked"
levels(desc_stats$group)
str(desc_stats)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
rm(temp)
levels(desc_stats$group)
str(desc_stats)
View(desc_stats)
desc_stats$group[desc_stats$group == "RABL"] <- "Random/Blocked"
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
rm(temp)
desc_stats$group[desc_stats$group == "RABL"]
desc_stats$group[desc_stats$group == "RABL"] <- "something"
desc_stats$group[as.character(desc_stats$group == "RABL")] <- "something"
View(desc_stats)
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
rm(temp)
df$something <- NA
df$something[df$group == "RABL"] <- "something"
View(df)
str(desc_stats)
unique(desc_stats$group[desc_stats$group == "RABL"])
desc_stats$group[desc_stats$group == 1] <- "something"
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
rm(temp)
desc_stats$group[desc_stats$group == "RABL"] <- as.character("something")
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats = summarise(temp, mean_rt = mean(rt),
median_rt = median(rt),
sdev = sd(rt),
N = length(rt),
se = sdev/sqrt(N),
upper_mean = mean_rt + se,
lower_mean = mean_rt - se,
upper_median = median_rt + se,
lower_median = median_rt - se)
rm(temp)
desc_stats$group2[desc_stats$group == "RABL"] <- "Random/Blocked"
desc_stats$group2 <- NA
desc_stats$group2[desc_stats$group == "RABL"] <- "Random/Blocked"
desc_stats$group2[desc_stats$group == "SIBL"] <- "Sinewave/Blocked"
mean_rt_plot = ggplot(desc_stats, aes(difficulty, mean_rt, colour = block_type))
mean_rt_plot = mean_rt_plot + geom_point()
mean_rt_plot = mean_rt_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_rt_plot = mean_rt_plot + facet_grid(group2~targ_pr)
mean_rt_plot
desc_stats$targ_pr2 <- NA
desc_stats$targ_pr2[desc_stats$targ_pr == 1] <- "Present"
desc_stats$targ_pr2[desc_stats$targ_pr == 0] <- "Absent"
mean_rt_plot = ggplot(desc_stats, aes(difficulty, mean_rt, colour = block_type))
mean_rt_plot = mean_rt_plot + geom_point()
mean_rt_plot = mean_rt_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_rt_plot = mean_rt_plot + facet_grid(targ_pr2~group2)
mean_rt_plot
mean_rt_plot = ggplot(desc_stats, aes(difficulty, mean_rt, colour = block_type))
mean_rt_plot = mean_rt_plot + geom_point()
mean_rt_plot = mean_rt_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_rt_plot = mean_rt_plot + labs(title = "Mean response times accross difficulty for target present and absent trials",
x = "Difficulty", y = "Response Times (seconds)")
mean_rt_plot = mean_rt_plot + facet_grid(targ_pr2~group2)
mean_rt_plot
mean_rt_plot = ggplot(desc_stats, aes(difficulty, mean_rt, colour = block_type))
mean_rt_plot = mean_rt_plot + geom_point() + geom_line()
mean_rt_plot = mean_rt_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_rt_plot = mean_rt_plot + labs(title = "Mean response times accross difficulty for target present and absent trials",
x = "Difficulty", y = "Response Times (seconds)")
mean_rt_plot = mean_rt_plot + facet_grid(targ_pr2~group2)
mean_rt_plot
mean_rt_plot = ggplot(desc_stats, aes(difficulty, mean_rt, colour = block_type))
mean_rt_plot = mean_rt_plot + geom_point() + geom_line()
mean_rt_plot = mean_rt_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_rt_plot = mean_rt_plot + labs(title = "Mean response times accross difficulty for target present and absent trials",
x = "Difficulty", y = "Response Times (seconds)",
colour = "Block Type")
mean_rt_plot = mean_rt_plot + facet_grid(targ_pr2~group2)
mean_rt_plot
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats_acc = summarise(temp, mean_correct = mean(correct),
median_correct = median(correct),
sdev = sd(correct),
N = length(correct),
se = sdev/sqrt(N),
upper_mean = mean_correct + se,
lower_mean = mean_correct - se,
upper_median = median_correct + se,
lower_median = median_correct - se)
rm(temp)
# add in better titles for plots
# initialise empty column
desc_stats$group2 <- NA
desc_stats$targ_pr2 <- NA
# fill it in
desc_stats$group2[desc_stats$group == "RABL"] <- "Random/Blocked"
desc_stats$group2[desc_stats$group == "SIBL"] <- "Sinewave/Blocked"
desc_stats$targ_pr2[desc_stats$targ_pr == 1] <- "Present"
desc_stats$targ_pr2[desc_stats$targ_pr == 0] <- "Absent"
mean_acc_plot = ggplot(desc_stats_acc, aes(difficulty, mean_correct, colour = block_type))
mean_acc_plot = mean_acc_plot + geom_point()
mean_acc_plot = mean_acc_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_acc_plot = mean_acc_plot + labs(x = "Difficulty", y = "Proportion correct responses", title = "Average Accuracy in Target present and Target Absent trials across difficulty.", colour = "Block Type")
mean_acc_plot = mean_acc_plot + facet_grid(group2~targ_pr2)
mean_acc
mean_acc_plot
mean_acc_plot = ggplot(desc_stats_acc, aes(difficulty, mean_correct, colour = block_type))
mean_acc_plot = mean_acc_plot + geom_point()
mean_acc_plot = mean_acc_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_acc_plot = mean_acc_plot + labs(x = "Difficulty", y = "Proportion correct responses", title = "Average Accuracy in Target present and Target Absent trials across difficulty.", colour = "Block Type")
mean_acc_plot
mean_acc_plot = mean_acc_plot + facet_grid(group2~targ_pr2)
mean_acc_plot
temp = group_by(df, group, block_type, difficulty, targ_pr)
desc_stats_acc = summarise(temp, mean_correct = mean(correct),
median_correct = median(correct),
sdev = sd(correct),
N = length(correct),
se = sdev/sqrt(N),
upper_mean = mean_correct + se,
lower_mean = mean_correct - se,
upper_median = median_correct + se,
lower_median = median_correct - se)
rm(temp)
# add in better titles for plots
# initialise empty column
desc_stats_acc$group2 <- NA
desc_stats_acc$targ_pr2 <- NA
# fill it in
desc_stats_acc$group2[desc_stats_acc$group == "RABL"] <- "Random/Blocked"
desc_stats_acc$group2[desc_stats_acc$group == "SIBL"] <- "Sinewave/Blocked"
desc_stats_acc$targ_pr2[desc_stats_acc$targ_pr == 1] <- "Present"
desc_stats_acc$targ_pr2[desc_stats_acc$targ_pr == 0] <- "Absent"
mean_acc_plot = ggplot(desc_stats_acc, aes(difficulty, mean_correct, colour = block_type))
mean_acc_plot = mean_acc_plot + geom_point()
mean_acc_plot = mean_acc_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_acc_plot = mean_acc_plot + labs(x = "Difficulty", y = "Proportion correct responses", title = "Average Accuracy in Target present and Target Absent trials across difficulty.", colour = "Block Type")
mean_acc_plot = mean_acc_plot + facet_grid(group2~targ_pr2)
desc_stats_acc$group2 <- NA
desc_stats_acc$targ_pr2 <- NA
desc_stats_acc$group2[desc_stats_acc$group == "RABL"] <- "Random/Blocked"
desc_stats_acc$group2[desc_stats_acc$group == "SIBL"] <- "Sinewave/Blocked"
desc_stats_acc$targ_pr2[desc_stats_acc$targ_pr == 1] <- "Present"
desc_stats_acc$targ_pr2[desc_stats_acc$targ_pr == 0] <- "Absent"
mean_acc_plot = ggplot(desc_stats_acc, aes(difficulty, mean_correct, colour = block_type))
mean_acc_plot = mean_acc_plot + geom_point()
mean_acc_plot = mean_acc_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_acc_plot = mean_acc_plot + labs(x = "Difficulty", y = "Proportion correct responses", title = "Average Accuracy in Target present and Target Absent trials across difficulty.", colour = "Block Type")
mean_acc_plot = mean_acc_plot + facet_grid(group2~targ_pr2)
mean_acc_plot
mean_acc_plot = ggplot(desc_stats_acc, aes(difficulty, mean_correct, colour = block_type))
mean_acc_plot = mean_acc_plot + geom_point() + geom_line()
mean_acc_plot = mean_acc_plot + geom_errorbar(aes(ymin = lower_mean, ymax = upper_mean))
mean_acc_plot = mean_acc_plot + labs(x = "Difficulty", y = "Proportion correct responses", title = "Average Accuracy in Target present and Target Absent trials across difficulty.", colour = "Block Type")
mean_acc_plot = mean_acc_plot + facet_grid(group2~targ_pr2)
mean_acc_plot

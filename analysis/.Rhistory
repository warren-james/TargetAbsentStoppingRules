m4.6 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b1*weight.s + b2*weight.s2 + b3*weight.s3,
a ~ dnorm(178,100),
b1 ~ dnorm(0,10),
b2 ~ dnorm(0,10),
b3 ~ dnorm(0,10),
sigma ~ dunif(0,50)
),
data = d)
test <- replicate(1e4, prod(0, 0, 10))
test
test <- replicate(1e4, prod(12, 0, 10))
head(test)
sim_mu <- rnorm(1e4, 0, 10)
sim_sig <- runif(1e4, 0, 10)
sim_prior <- rnorm(1e4, sim_mu, sim_sig)
sim_mu <- rnorm(1e4, 0, 10)
sim_sig <- runif(1e4, 0, 10)
sim_prior <- rnorm(1e4, sim_mu, sim_sig)
dens(sim_prior)
data(Howell1)
d <- Howell1
d2 <- d[d$age >= 18,]
rm(d)
d2$weight.s <- (d2$weight - mean(d2$weight)) / sd(d2$weight)
m4.4 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight.c,
a ~ dnorm(156,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
m4.4 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight.s,
a ~ dnorm(156,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
m4.H1 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight.s,
a ~ dnorm(156,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
post <- extract.samples(m4.H1)
mu_at_50 <- post$a + post$b * 50
mu_at_50
d2$weight.c <- d2$weight - mean(d2$weight)
m4.H1 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight.c,
a ~ dnorm(156,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
# now let's extract some stuff
post <- extract.samples(m4.H1)
m4.H1 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight.c,
a ~ dnorm(156,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
post <- extract.samples(m4.H1)
mu_at_50 <- post$a + post$b * 50
mean(mu_at_50)
m4.H1 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight,
a ~ dnorm(156,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
# now let's extract some stuff
post <- extract.samples(m4.H1)
mu_at_50 <- post$a + post$b * 50
mean(mu_at_50)
m4.H1 <- map(
alist(
height ~ dnorm(mu,sigma),
mu <- a + b*weight,
a ~ dnorm(178,100),
b ~ dnorm(0,10),
sigma ~ dunif(0,50)
) ,
data = d2)
# now let's extract some stuff
post <- extract.samples(m4.H1)
mu_at_50 <- post$a + post$b * 50
mean(mu_at_50)
weights_to_check <- c(46.95, 43.72, 64.78, 32.59, 54.63)
d = NULL
d = rbind(d, data.frame(weights_to_check))
d
for(i in weights_to_check)
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
d = rbind(d, data.frame(weights_to_check, Expected_height, Int89))
rm(d)
d = NULL
for(i in weights_to_check)
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
d = rbind(d, data.frame(weights_to_check, Expected_height, Int89))
temp <- post$a + post$b * 50
Int89 <- HPDI(temp, prob = 0.89)
Int89
Int89[1]
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
d = rbind(d, data.frame(weights_to_check, Expected_height, Int89[1], Int89[2]))
}
rm(d)
d = NULL
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1]
upper <- Int89[2]
d = rbind(d, data.frame(weights_to_check, Expected_height, lower, upper))
}
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1]
upper <- Int89[2]
d = rbind(d, data.frame(weights_to_check[i], Expected_height, lower, upper))
}
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1]
upper <- Int89[2]
d = rbind(d, data.frame(i, Expected_height, lower, upper))
}
d = NULL
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1]
upper <- Int89[2]
d = rbind(d, data.frame(i, Expected_height, lower, upper))
}
head(d)
d = NULL
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1]
upper <- Int89[2]
Weights <- i
d = rbind(d, data.frame(Weights, Expected_height, lower, upper))
}
head(d)
d = NULL
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1,]
upper <- Int89[2,]
Weights <- i
d = rbind(d, data.frame(Weights, Expected_height, lower, upper))
}
d = NULL
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[,1]
upper <- Int89[,2]
Weights <- i
d = rbind(d, data.frame(Weights, Expected_height, lower, upper))
}
d = NULL
for(i in weights_to_check) {
temp <- post$a + post$b * i
Expected_height <- mean(temp)
Int89 <- HPDI(temp, prob = 0.89)
lower <- Int89[1]
upper <- Int89[2]
Weights <- i
d = rbind(d, data.frame(Weights, Expected_height, lower, upper))
}
temp <- post$a + post$b * 50
HDPI(temp)
HPDI(temp)
HPDI(temp)[1]
HPDI(temp)[2]
head(d)
d
data(islandsDistMatrix)
Dmat <- islandsDistMatrix
library(rethinking)
data(islandsDistMatrix)
Dmat <- islandsDistMatrix
data("Kline2")
d <- Kline2
# tidy
rm(Kline2)
# prep indexes
d$society <- 1:10
m13.7 <- map2stan(
alist(
total_tools ~ dpois(lambda),
log(lambda) <- a + g[society] + bp*logpop,
g[society] ~ GPL2( Dmat , etasq , rhosq , 0.01 ),
a ~ dnorm(0,10),
bp ~ dnorm(0,1),
etasq ~ dcauchy(0,1),
rhosq ~ dcauchy(0,1)
),
data=list(
total_tools=d$total_tools,
logpop=d$logpop,
society=d$society,
Dmat=islandsDistMatrix),
warmup=2000 , iter=1e4 , chains=4)
precis(m13.7,depth=2)
post <- extract.samples(m13.7)
curve(median(post$etasq)*exp(-median(post$rhosq)*x^2), from = 0, to = 10,
xlab = "dist (thousand km", ylab = "covariance", ylim = c(0,1),
yaxp = c(0,1,4), lwd=2)
curve(median(post$etasq)*exp(-median(post$rhosq)*x^2), from = 0, to = 10,
xlab = "dist (thousand km", ylab = "covariance", ylim = c(0,1),
yaxp = c(0,1,4), lwd=2)
# plot 100 function samples
for( i in 1:100)
curve(post$etasq[i]*exp(-post$rhosq[i]*x^2), add = T,
col = col.alpha("black", 0.2))
dev.off()
K <- matrix(0, nrow = 10, ncol = 10)
for(i in 1:10)
for(j in 1:10)
K[i,j] <- median(post$etasq) *
exp(-median(post$rhosq) *
islandsDistMatrix[i,j]^2)
diag(K) <- median(post$etasq) + 0.01
Rho <- round(cov2cor(K), 2)
# add names for convenience
colnames(Rho) <- c("Ml","Ti","SC","Ya","Fi","Tr","Ch","Mn","To","Ha")
rownames(Rho) <- colnames(Rho)
Rhow
Rho
psize <- d$logpop/max(d$logpop)
psize <- exp(psize*1.5)-2
# plot raw data and labels
plot(d$lon2, d$lat, xlab = "longitude", ylab = "latitude",
col = randi2, cex = psize, pch = 16, xlim = c(-50,30))
labels <- as.character(d$culture)
text(d$lon2, d$lat, labels = labels, cex = 0.7, pos = c(2,4,3,3,4,1,3,2,4,2))
# overlay lines
for(i in 1:10)
for(j in 1:10)
if(i < j)
lines(c(d$lon2[i],d$lon2[j]), c(d$lat[i], d$lat[j]),
lwd=2, col = col.alpha("black", Rho[i,j]^2))
psize <- d$logpop/max(d$logpop)
psize <- exp(psize*1.5)-2
# plot raw data and labels
plot(d$lon2, d$lat, xlab = "longitude", ylab = "latitude",
col = randi2, cex = psize, pch = 16, xlim = c(-50,30))
labels <- as.character(d$culture)
text(d$lon2, d$lat, labels = labels, cex = 0.7, pos = c(2,4,3,3,4,1,3,2,4,2))
# overlay lines
for(i in 1:10)
for(j in 1:10)
if(i < j)
lines(c(d$lon2[i],d$lon2[j]), c(d$lat[i], d$lat[j]),
lwd=2, col = col.alpha("black", Rho[i,j]^2))
plot(d$lon2, d$lat, xlab = "longitude", ylab = "latitude",
col = rangi2, cex = psize, pch = 16, xlim = c(-50,30))
labels <- as.character(d$culture)
text(d$lon2, d$lat, labels = labels, cex = 0.7, pos = c(2,4,3,3,4,1,3,2,4,2))
# overlay lines
for(i in 1:10)
for(j in 1:10)
if(i < j)
lines(c(d$lon2[i],d$lon2[j]), c(d$lat[i], d$lat[j]),
lwd=2, col = col.alpha("black", Rho[i,j]^2))
logpop.seq <- seq( from=6 , to=14 , length.out=30 )
lambda <- sapply( logpop.seq ,
function(lp) exp( post$a + post$bp*lp ) )
lambda.median <- apply( lambda , 2 , median )
lambda.PI80 <- apply( lambda , 2 , PI , prob=0.8 )
# plot raw data and labels
plot( d$logpop ,
d$total_tools ,
col=rangi2 ,
cex=psize ,
pch=16 ,
xlab="log population" ,
ylab="total tools" )
text( d$logpop ,
d$total_tools ,
labels=labels ,
cex=0.7 ,
pos=c(4,3,4,2,2,1,4,4,4,2) )
# display posterior predictions
lines( logpop.seq ,
lambda.median ,
lty=2 )
lines( logpop.seq ,
lambda.PI80[1,] ,
lty=2 )
lines( logpop.seq ,
lambda.PI80[2,] ,
lty=2 )
# overlay correlations
for( i in 1:10 )
for ( j in 1:10 )
if ( i < j )
lines( c( d$logpop[i],d$logpop[j] ) ,
c( d$total_tools[i],d$total_tools[j] ) ,
lwd=2 , col=col.alpha("black",Rho[i,j]^2) )
gas <- ((408 * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((59699 - 59117) * 0.1586) + (106 * 0.18)
59699 - 59117
gas <- ((408 * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((59699 - 59117) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
rm(list = ls())
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
total_owed = w_owes + k_owes + l_owes + j_owes
total_owed/4
options(digits = 2)
# work out bills
# for 8th March 2018
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
# total owed
total_owed = w_owes + k_owes + l_owes + j_owes
total_owed
options(digits = 4)
# work out bills
# for 8th March 2018
elec_previous = 58242
elec_current = 59699
gas_previous = 5480
gas_current = 5888
gas <- (((gas_current - gas_previous) * 39.4 * 1.02264/3.6) * 0.02763) + (106 * 0.25)
elec <- ((elec_current - elec_previous) * 0.1586) + (106 * 0.18)
total_cost = gas + elec
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 2
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
# total owed
total_owed = w_owes + k_owes + l_owes + j_owes
total_owed
total_owed/4
total_weeks = 12
w_weeks = total_weeks - 2
k_weeks = total_weeks - 1
l_weeks = total_weeks - 3
j_weeks = total_weeks
all_weeks = w_weeks + j_weeks + k_weeks + l_weeks
w_owes = total_cost*(w_weeks/all_weeks)
k_owes = total_cost*(k_weeks/all_weeks)
l_owes = total_cost*(l_weeks/all_weeks)
j_owes = total_cost*(j_weeks/all_weeks)
w_owes
k_owes
l_owes
j_owes
# total owed
total_owed = w_owes + k_owes + l_owes + j_owes
97*10^6 * 15
97*10^6 * 10
97*10^6
97*10^5
setwd("F:/Uni/Github/TargetAbsentStoppingRules/analysis")
library(brms)
library(rstan)
library(tidyverse)
load("scratch/models/brm_m11")
m11_effects <- marginal_effects(m11_rt_theta_bt_cht)
plot(m11_effects, plot = TRUE)
summary(m11_rt_theta_bt_cht)
summary(m11_rt_theta_bt_cht)
plot(m11_effects, plot = TRUE)
plot(m11_effects, plot = FALSE)[[5]]
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", colour = "Block Type")
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", fill = "Block Type")
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", fill = "Block Type", colour = "Block Type")
plot(m11_effects, plot = FALSE)[[4]] +
ggplot2::ggtitle("Model with interaction of Block type and Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Theta")
plot(m11_effects, plot = FALSE)[[4]] +
ggplot2::ggtitle("Model with interaction of Block type and Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Theta", fill = "Block Type", colour = "Block Type")
plot(m11_effects, plot = FALSE)[[5]] +
ggplot2::ggtitle("Model of RTs by Change in Difficulty (Theta)") +
ggplot2::theme(plot.title = element_text(hjust = 0.5)) +
ggplot2::labs(y = "RT", x = "Change in Theta", fill = "Block Type", colour = "Block Type")
busses <- 77.75 + 66.50
CB <- 55.45
hotel <- 269
K_owes <- (busses + CB + hotel)/2
total <- busses + CB + hotel
rm(busses, total, K_owes, hotel, CB)
summary(m11_rt_theta_bt_cht)
load("scratch/models/brm_m10")
summary(m10_rt_theta_bt_cht)
m10_effects <- marginal_effects(m10_rt_theta_bt_cht)
plot(m10_effects, plot = TRUE)

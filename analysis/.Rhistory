paste("../data/BLSI/sine/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df = bind_rows(df, d)
}
# tidy up
rm(d ,f, import_names)
# convert things to factors
df$participant <- as.factor(df$participant)
df$targ_side <- as.factor(df$targ_side)
df$key <- as.factor(df$key)
df$message <- as.factor(df$message)
df$block_type <- as.factor(df$block_type)
# add site information
df$site <- "Aberdeen"
df$site[df$participant > 20] <- "Essex"
# add participant group info
df$group <- "SIBL"
# tidy
rm(block_files,sine_files)
rm(list = ls()])
rm(list = ls())
rm(list = ls())
library(tidyverse)
#################################################
#### pre-processing script for the SIBL data ####
# notes #
# key l = present
# key r = absent
#################################################
# Shift function #
# WHAT IS THIS USED FOR?
shift <- function(x,n){
c(rep(NA, n),x[seq(length(x)-n)])
}
extract_participant_id <- function(filename) {
participant <- sub(".*bl", "", filename)
participant <- sub(".dat*.", "", participant)
return(participant)
}
extract_difficulty <- function(d) {
d$difficulty <- sub(".*v", "",d$name)
d$difficulty <- sub(".jpg*.", "", d$difficulty)
d$difficulty <- as.numeric(d$difficulty)
return(d)
}
#################################################
#### retrieve SIBL data ####
block_files <- dir("../data/BLSI/Block/")
sine_files  <- dir("../data/BLSI/Sine/")
# create empty data.frame for data
df <- tibble(
participant = character(),
trial = numeric(),
block = numeric(),
targ_pr = numeric(),
targ_side = character(),
name = character(),
key = character(),
rt = numeric(),
message = character(),
difficulty = numeric(),
block_type = character())
import_names <- c(
"trial",
"block",
"targ_pr",
"targ_side",
"name",
"key",
"rt",
"message",
"difficulty",
"block_type")
for (f in block_files)
{
d <- read.csv(
paste("../data/BLSI/Block/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# add to main dataframe
df = bind_rows(df, d)
}
for (f in sine_files)
{
d = read.csv(
paste("../data/BLSI/sine/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df = bind_rows(df, d)
}
# tidy up
rm(d ,f, import_names)
# add site information
df$site <- "Aberdeen"
df$site[df$participant > 20] <- "Essex"
# convert things to factors
df$participant <- as.factor(df$participant)
df$targ_side <- as.factor(df$targ_side)
df$key <- as.factor(df$key)
df$message <- as.factor(df$message)
df$block_type <- as.factor(df$block_type)
# add participant group info
df$group <- "SIBL"
# tidy
rm(block_files,sine_files)
View(df)
dir("../data/BLSI/Sine/")
dir("../data/BLSI/Block/")
rm(list = ls())
library(tidyverse)
#################################################
#### pre-processing script for the SIBL data ####
# notes #
# key l = present
# key r = absent
#################################################
# Shift function #
# WHAT IS THIS USED FOR?
shift <- function(x,n){
c(rep(NA, n),x[seq(length(x)-n)])
}
extract_participant_id <- function(filename) {
participant <- sub(".*bl", "", filename)
participant <- sub(".*si", "", filename)
participant <- sub(".dat*.", "", participant)
return(participant)
}
extract_difficulty <- function(d) {
d$difficulty <- sub(".*v", "",d$name)
d$difficulty <- sub(".jpg*.", "", d$difficulty)
d$difficulty <- as.numeric(d$difficulty)
return(d)
}
#################################################
#### retrieve SIBL data ####
block_files <- dir("../data/BLSI/Block/")
sine_files  <- dir("../data/BLSI/Sine/")
# create empty data.frame for data
df <- tibble(
participant = character(),
trial = numeric(),
block = numeric(),
targ_pr = numeric(),
targ_side = character(),
name = character(),
key = character(),
rt = numeric(),
message = character(),
difficulty = numeric(),
block_type = character())
import_names <- c(
"trial",
"block",
"targ_pr",
"targ_side",
"name",
"key",
"rt",
"message",
"difficulty",
"block_type")
for (f in block_files)
{
d <- read.csv(
paste("../data/BLSI/Block/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# add to main dataframe
df = bind_rows(df, d)
}
for (f in sine_files)
{
d = read.csv(
paste("../data/BLSI/sine/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df = bind_rows(df, d)
}
# tidy up
rm(d ,f, import_names)
# add site information
df$site <- "Aberdeen"
df$site[df$participant > 20] <- "Essex"
# convert things to factors
df$participant <- as.factor(df$participant)
df$targ_side <- as.factor(df$targ_side)
df$key <- as.factor(df$key)
df$message <- as.factor(df$message)
df$block_type <- as.factor(df$block_type)
# add participant group info
df$group <- "SIBL"
# tidy
rm(block_files,sine_files)
View(df)
rm(list = ls())
library(tidyverse)
#################################################
#### pre-processing script for the SIBL data ####
# notes #
# key l = present
# key r = absent
#################################################
# Shift function #
# WHAT IS THIS USED FOR?
shift <- function(x,n){
c(rep(NA, n),x[seq(length(x)-n)])
}
extract_participant_id <- function(filename) {
#participant <- sub(".*bl", "", filename)
participant <- substring(filename, 3)
participant <- sub(".dat*.", "", participant)
return(participant)
}
extract_difficulty <- function(d) {
d$difficulty <- sub(".*v", "",d$name)
d$difficulty <- sub(".jpg*.", "", d$difficulty)
d$difficulty <- as.numeric(d$difficulty)
return(d)
}
#################################################
#### retrieve SIBL data ####
block_files <- dir("../data/BLSI/Block/")
sine_files  <- dir("../data/BLSI/Sine/")
# create empty data.frame for data
df <- tibble(
participant = character(),
trial = numeric(),
block = numeric(),
targ_pr = numeric(),
targ_side = character(),
name = character(),
key = character(),
rt = numeric(),
message = character(),
difficulty = numeric(),
block_type = character())
import_names <- c(
"trial",
"block",
"targ_pr",
"targ_side",
"name",
"key",
"rt",
"message",
"difficulty",
"block_type")
for (f in block_files)
{
d <- read.csv(
paste("../data/BLSI/Block/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# add to main dataframe
df = bind_rows(df, d)
}
for (f in sine_files)
{
d = read.csv(
paste("../data/BLSI/sine/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df = bind_rows(df, d)
}
# tidy up
rm(d ,f, import_names)
# add site information
df$site <- "Aberdeen"
df$site[df$participant > 20] <- "Essex"
# convert things to factors
df$participant <- as.factor(df$participant)
df$targ_side <- as.factor(df$targ_side)
df$key <- as.factor(df$key)
df$message <- as.factor(df$message)
df$block_type <- as.factor(df$block_type)
# add participant group info
df$group <- "SIBL"
# tidy
rm(block_files,sine_files)
View(df)
block_files <- dir("../data/BLRA/Block/")
random_files <- dir("../data/BLRA/Random/")
df2 <- tibble(
participant = character(),
trial = numeric(),
block = numeric(),
targ_pr = numeric(),
targ_side = character(),
name = character(),
key = character(),
rt = numeric(),
message = character(),
difficulty = numeric(),
block_type = character())
# make the blocked data set #
import_names <- c(
"trial",
"block",
"targ_pr",
"targ_side",
"name",
"key",
"rt",
"message",
"difficulty",
"block_type")
for (f in block_files)
{
d <- read.csv(
paste("../data/BLRA/Block/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# add to main dataframe
df2 = bind_rows(df2, d)
}
for (f in random_files)
{
d = read.csv(
paste("../data/BLRA/Random/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df2 = bind_rows(df2, d)
}
# tidy up
rm(d ,f, import_names)
# add site information
df2$site <- "Aberdeen"
df2$site[df2$participant > 20] <- "Essex"
# stop participant numbers overlapping
df2$participant <- df2$participant + 20
# convert things to factors
df2$participant <- as.factor(df2$participant)
df2$targ_side <- as.factor(df2$targ_side)
df2$key <- as.factor(df2$key)
df2$message <- as.factor(df2$message)
df2$block_type <- as.factor(df2$block_type)
# add participant group info
df2$group <- "RABL"
View(df2)
summary(df2$participant)
summary(df$participant)
block_files <- dir("../data/BLRA/Block/")
random_files <- dir("../data/BLRA/Random/")
df2 <- tibble(
participant = numeric(),
trial = numeric(),
block = numeric(),
targ_pr = numeric(),
targ_side = character(),
name = character(),
key = character(),
rt = numeric(),
message = character(),
difficulty = numeric(),
block_type = character())
# make the blocked data set #
import_names <- c(
"trial",
"block",
"targ_pr",
"targ_side",
"name",
"key",
"rt",
"message",
"difficulty",
"block_type")
for (f in block_files)
{
d <- read.csv(
paste("../data/BLRA/Block/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# add to main dataframe
df2 = bind_rows(df2, d)
}
for (f in random_files)
{
d = read.csv(
paste("../data/BLRA/Random/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df2 = bind_rows(df2, d)
}
# tidy up
rm(d ,f, import_names)
# add site information
df2$site <- "Aberdeen"
df2$site[df2$participant > 20] <- "Essex"
# stop participant numbers overlapping
df2$participant <- df2$participant + 20
# convert things to factors
df2$participant <- as.factor(df2$participant)
df2$targ_side <- as.factor(df2$targ_side)
df2$key <- as.factor(df2$key)
df2$message <- as.factor(df2$message)
df2$block_type <- as.factor(df2$block_type)
# add participant group info
df2$group <- "RABL"
df2$participant <- as.numeric(df2$participant) + 20
#### retrieve RABL data ####
block_files <- dir("../data/BLRA/Block/")
random_files <- dir("../data/BLRA/Random/")
df2 <- tibble(
participant = character(),
trial = numeric(),
block = numeric(),
targ_pr = numeric(),
targ_side = character(),
name = character(),
key = character(),
rt = numeric(),
message = character(),
difficulty = numeric(),
block_type = character())
# make the blocked data set #
import_names <- c(
"trial",
"block",
"targ_pr",
"targ_side",
"name",
"key",
"rt",
"message",
"difficulty",
"block_type")
for (f in block_files)
{
d <- read.csv(
paste("../data/BLRA/Block/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# add to main dataframe
df2 = bind_rows(df2, d)
}
for (f in random_files)
{
d = read.csv(
paste("../data/BLRA/Random/", f, sep=""),
sep = "\t", header = T)
names(d) <-import_names
# extract participant id number from filename
d$participant <- extract_participant_id(f)
# extract difficulty
d <- extract_difficulty(d)
# add to main dataframe
df2 = bind_rows(df2, d)
}
# tidy up
rm(d ,f, import_names)
# add site information
df2$site <- "Aberdeen"
df2$site[df2$participant > 20] <- "Essex"
# stop participant numbers overlapping
df2$participant <- as.numeric(df2$participant) + 20
# convert things to factors
df2$participant <- as.factor(df2$participant)
df2$targ_side <- as.factor(df2$targ_side)
df2$key <- as.factor(df2$key)
df2$message <- as.factor(df2$message)
df2$block_type <- as.factor(df2$block_type)
# add participant group info
df2$group <- "RABL"
View(df2)
head(df)
head(df2)
df <- rbind(df,df2)
rm(block_files,random_files, df2)
